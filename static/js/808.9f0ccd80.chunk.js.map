{"version":3,"file":"static/js/808.9f0ccd80.chunk.js","mappings":"qRAEaA,EAAaC,EAAAA,GAAAA,KAAH,wHAOVC,EAAQD,EAAAA,GAAAA,MAAH,+CAILE,EAAQF,EAAAA,GAAAA,MAAH,iEAKLG,EAAMH,EAAAA,GAAAA,OAAH,qU,gFChBHI,E,QAAMJ,GAAAA,IAAH,4C,UCchB,EAXgB,SAAC,GAAyB,IAAvBK,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,SAACF,EAAD,WACE,UAACG,EAAA,EAAD,YACE,wBAAKF,IACJC,MAIR,C,sGCKUE,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,E,oBCnBPG,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEnBC,EAAe,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,EAEpBC,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,EAEhBC,EAAY,SAAAN,GAAK,OAAIA,EAAMO,OAAOA,MAAjB,E,oBCCf,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,EAAczB,IACd0B,EAAgB1B,IAEhBY,GAAWe,EAAAA,EAAAA,IAAYjB,GAEvBkB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GAMf,EAEKC,GAAWC,EAAAA,EAAAA,MAqBXC,EAAQ,WACZZ,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAAC,KAAD,CAAYW,SAzBO,SAAAN,GACnBA,EAAEO,iBAEYxB,EAASyB,MACrB,SAAAC,GAAO,OACLA,EAAQjB,KAAKkB,gBAAkBlB,EAAKmB,qBACpCF,EAAQf,SAAWA,CAFd,IAMPkB,MAAM,GAAD,OAAIpB,EAAJ,eAAeE,EAAf,6BAGLS,GAASU,EAAAA,EAAAA,IAAW,CAAErB,KAAAA,EAAME,OAAAA,KAG9BW,IACD,EAQC,WACE,SAAC,KAAD,CAAOS,QAASlB,EAAhB,mBAEA,SAAC,KAAD,CACEmB,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRhD,MAAM,yIACNiD,UAAQ,EACRf,MAAOV,EACP0B,SAAUnB,EACVtB,GAAImB,KAGN,SAAC,KAAD,CAAOkB,QAASjB,EAAhB,qBACA,SAAC,KAAD,CACEkB,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRhD,MAAM,+FACNiD,UAAQ,EACRf,MAAOR,EACPwB,SAAUnB,EACVtB,GAAIoB,KAGN,SAAC,KAAD,CAAKkB,KAAK,SAAV,2BAGL,C,6CCpFYhD,EAAMJ,EAAAA,GAAAA,IAAH,kFAMHC,EAAQD,EAAAA,GAAAA,MAAH,+CAILE,EAAQF,EAAAA,GAAAA,MAAH,iECLZwD,EAAWhD,IA0BjB,EAxBe,WACb,IAAMgC,GAAWC,EAAAA,EAAAA,MACXf,GAASS,EAAAA,EAAAA,IAAYV,GAI3B,OACE,UAACrB,EAAD,YACE,SAACH,EAAD,CAAOkD,QAASK,EAAhB,oCAGA,SAACtD,EAAD,CACEkD,KAAK,OACLvB,KAAK,SACLwB,QAAQ,yHACRhD,MAAM,yIACNiD,UAAQ,EACRf,MAAOb,EACP6B,SAdqB,SAAAlB,GAAC,OAAIG,GAASiB,EAAAA,EAAAA,GAAUpB,EAAEC,OAAOC,OAAhC,EAetBzB,GAAI0C,MAIX,EC9BYE,EAAO1D,EAAAA,GAAAA,IAAH,yHAOJ2D,EAAS3D,EAAAA,GAAAA,OAAH,yVCgBnB,EApBgB,SAAC,GAA0B,IAAxBc,EAAuB,EAAvBA,GAAIe,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACrBS,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAACiB,EAAD,WACE,4BACE,yBACG7B,EADH,KACWE,MAEX,SAAC4B,EAAD,CAAQP,KAAK,SAASQ,QAAS,kBAThB,SAAA9C,GACnB0B,GAASqB,EAAAA,EAAAA,IAAc/C,GACxB,CAO0CgD,CAAahD,EAAnB,EAA/B,wBAMP,ECrBYiD,EAAK/D,EAAAA,GAAAA,GAAH,kFCwBf,EArBoB,WAClB,IAAMoB,GAAWe,EAAAA,EAAAA,IAAYjB,GAGvB8C,GAFS7B,EAAAA,EAAAA,IAAYV,GAEKuB,oBAE1BiB,EAAkB7C,EAASM,QAAO,SAAAoB,GAAO,OAC7CA,EAAQjB,KAAKkB,cAAcmB,SAASF,EADS,IAI/C,OACE,+BACE,SAACD,EAAD,UACGE,EAAgBE,KAAI,YAA2B,IAAxBrD,EAAuB,EAAvBA,GAAIe,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAChC,OAAO,SAAC,EAAD,CAAkBjB,GAAIA,EAAIe,KAAMA,EAAME,OAAQA,GAAhCjB,EACtB,OAIR,ECXc,SAASsD,IACtB,IAAM5B,GAAWC,EAAAA,EAAAA,MACXnB,GAAYa,EAAAA,EAAAA,IAAYd,GACxBG,GAAQW,EAAAA,EAAAA,IAAYZ,GACpBH,GAAWe,EAAAA,EAAAA,IAAYjB,GAM7B,OAJAmD,EAAAA,EAAAA,YAAU,WACR7B,GAAS8B,EAAAA,EAAAA,MACV,GAAE,CAAC9B,KAGF,iCACE,SAAC+B,EAAA,EAAD,CAASlE,MAAM,YAAf,UACE,SAACsB,EAAD,OAGF,UAAC4C,EAAA,EAAD,CAASlE,MAAM,WAAf,WACE,SAAC,EAAD,IACCiB,IAAa,uCACbE,IAAS,yDAAiCA,KAC1CJ,EAASoD,OAAS,IAAMhD,IAAS,SAAC,EAAD,KAChCF,GAAiC,IAApBF,EAASoD,SACtB,kFAKT,C","sources":["components/Form/Form.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","../node_modules/nanoid/index.browser.js","redux/contactsAndFilter/selectors.jsx","components/Form/Form.jsx","components/Filter/Filter.syled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  padding: 20px 12px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-bottom: 20px;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  width: 120px;\n  padding: 4px 12px;\n  background-color: white;\n  border-radius: 4px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n    rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n  &:hover,\n  &:focus {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const Div = styled.div`\npadding-top: 20px;\n`;","import PropTypes from 'prop-types';\nimport Container from 'components/Container/Container';\n\nimport { Div } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Div>\n      <Container>\n        <h2>{title}</h2>\n        {children}\n      </Container>\n    </Div>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsAndFilter/operations';\nimport { getContacts } from 'redux/contactsAndFilter/selectors';\nimport { FormStyled, Label, Input, Btn } from './Form.styled';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const match = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLocaleLowerCase() ||\n        contact.number === number\n    );\n\n    if (match) {\n      alert(`${name} or ${number} is already in contacts`);\n      return;\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>Name</Label>\n\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n        id={nameInputId}\n      />\n\n      <Label htmlFor={numberInputId}>Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n        id={numberInputId}\n      />\n\n      <Btn type=\"submit\">Add contact</Btn>\n    </FormStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-bottom: 20px;\n`;\n","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contactsAndFilter/selectors';\nimport { setFilter } from 'redux/contactsAndFilter/filterSlice';\n\nimport { Div, Label, Input } from './Filter.syled';\n\nconst filterId = nanoid();\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <Div>\n      <Label htmlFor={filterId}>\n        Find contacts by name\n      </Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={handleFilterChange}\n        id={filterId}\n      />\n    </Div>\n  );\n};\nexport default Filter;","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nexport const BtnDel = styled.button`\n  cursor: pointer;\n  width: 120px;\n  height: 24px;\n  padding: 4px 12px;\n  background-color: white;\n  border-radius: 4px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n    rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n\n  &:hover,\n  &:focus {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsAndFilter/operations';\nimport { Item, BtnDel } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <Item>\n      <div>\n        <p>\n          {name}: {number}\n        </p>\n        <BtnDel type=\"button\" onClick={() => handleDelete(id)}>\n          Delete\n        </BtnDel>\n      </div>\n    </Item>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n","import { useSelector } from 'react-redux';\nimport Contact from 'components/ContactItem/ContactItem';\nimport { getContacts, getFilter } from 'redux/contactsAndFilter/selectors';\nimport { Ul } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <Ul>\n        {visibleContacts.map(({ id, name, number }) => {\n          return <Contact key={id} id={id} name={name} number={number} />;\n        })}\n      </Ul>\n    </>\n  );\n};\n\nexport default ContactList;","import Section from 'components/Section/Section';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsAndFilter/operations';\nimport {\n  getContacts,\n  getError,\n  getIsLoading,\n} from 'redux/contactsAndFilter/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && <h2>Loading...</h2>}\n        {error && <h2>Opps, something went wrong: {error}</h2>}\n        {contacts.length > 0 && !error && <ContactList />}\n        {!isLoading && contacts.length === 0 && (\n          <h4>You have no contacts. Add some in the form above</h4>\n        )}\n      </Section>\n    </>\n  );\n}"],"names":["FormStyled","styled","Label","Input","Btn","Div","title","children","Container","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filter","Form","useState","name","setName","number","setNumber","nameInputId","numberInputId","useSelector","handleChange","e","target","value","dispatch","useDispatch","reset","onSubmit","preventDefault","find","contact","toLowerCase","toLocaleLowerCase","alert","addContact","htmlFor","type","pattern","required","onChange","filterId","setFilter","Item","BtnDel","onClick","deleteContact","handleDelete","Ul","normalizedFilter","visibleContacts","includes","map","Contacts","useEffect","fetchContacts","Section","length"],"sourceRoot":""}